buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0-rc1'
        classpath 'org.ajoberstar:gradle-git:0.8.0'
    }
}
apply plugin: 'com.android.library'
android {
    compileSdkVersion 21
    buildToolsVersion '21.1.2'

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
    }
}
allprojects {
    version = VERSION_NAME
    group = GROUP

    repositories {
        mavenCentral()
    }
}
import org.ajoberstar.grgit.*
project.ext.androidAbi = System.getenv()['ANDROID_ABI']
project.ext.vlcSource = file('vlc-android-' + project.ext.androidAbi)
task cloneVlcAndroid << {
    Grgit.clone(uri: 'http://git.videolan.org/git/vlc-ports/android.git', dir: project.ext.vlcSource)
}
// Only clone once.
cloneVlcAndroid.onlyIf { !project.ext.vlcSource.exists() }
task updateVlcCheckout(dependsOn: 'cloneVlcAndroid') << {
    def repo = Grgit.open(project.ext.vlcSource)
    repo.pull(rebase: true)
}
task buildVlc(type: Exec, dependsOn: 'updateVlcCheckout') {
    workingDir project.ext.vlcSource
    commandLine './compile.sh'
}
task copyJniLibs(type: Copy, dependsOn: 'buildVlc') {
    from('vlc-android-' + project.ext.androidAbi + '/libvlc/libs/')
    into('src/main/jniLibs/')
}
task updateVlc(type: Copy, dependsOn: 'copyJniLibs') {
    from('vlc-android-' + project.ext.androidAbi + '/libvlc/src/')
    into('src/main/java/')
}
//upload aar to maven central with sonatype
apply from: 'https://raw.github.com/chrisbanes/gradle-mvn-push/8cfffbbff6b9094af1c92318ea5d5a5bb0b8bb30/gradle-mvn-push.gradle'
dependencies {
}